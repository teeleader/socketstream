// Generated by CoffeeScript 1.4.0
var redis;

redis = require('redis');

module.exports = function(config) {
  var conn, host, options, port;
  if (config == null) {
    config = {};
  }
  port = config.port || 6379;
  host = config.host || "127.0.0.1";
  options = config.options || {};
  conn = {};
  ['pub', 'sub'].forEach(function(name) {
    conn[name] = redis.createClient(port, host, options);
    if (config.pass) {
      conn[name].auth(config.pass);
    }
    if (config.db) {
      conn[name].select(config.db);
    }
    conn[name].on('connect', function() {
      console.error("[Redis-PubSub] Connection: " + name + " - Connected");
      if (name === 'pub') {
        return conn.pub.publish('ss:event', 'd6581e085a3748259abcc61d20547e39eb1e7d2883934091b0968bdbe2bb4aaac2cd1ee9708e424eb7704e06be99d3c8');
      }
    });
    conn[name].on('end', function() {
      return console.error("[Redis-PubSub] Connection: " + name + " - Disconnected");
    });
    return conn[name].on('error', function(err) {
      return console.error("[Redis-PubSub] Connection: " + name + " - Error: " + err);
    });
  });
  return {
    listen: function(cb) {
      conn.sub.subscribe('ss:event');
      return conn.sub.on('message', function(channel, msg) {
        if ((msg != null) && msg === 'd6581e085a3748259abcc61d20547e39eb1e7d2883934091b0968bdbe2bb4aaac2cd1ee9708e424eb7704e06be99d3c8') {
          return;
        }
        return cb(JSON.parse(msg));
      });
    },
    send: function(obj) {
      var msg;
      msg = JSON.stringify(obj);
      return conn.pub.publish('ss:event', msg);
    }
  };
};
